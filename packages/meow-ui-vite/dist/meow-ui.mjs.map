{"version":3,"file":"meow-ui.mjs","sources":["../config/colors.ts","../src/button/index.vue","../src/button/index.vue","../src/input/index.vue","../src/input/index.vue","../src/switch/index.vue","../src/switch/index.vue","../src/tree/index.vue","../src/tree/index.vue","../src/entry.ts"],"sourcesContent":["\r\n\r\nexport const type2Color = {\r\n    primary: 'blue',\r\n    warning: 'yellow',\r\n    danger: 'red',\r\n    success: 'green',\r\n    default: 'gray'\r\n}","<template>\r\n  <div class=\"m-button-wrapper\">\r\n    <button\r\n      type=\"button\"\r\n      :class=\"[\r\n        `text-${ghost ? type2Color[type] + '-600' : 'white'}`,\r\n        `hover:text-${ghost ? 'white' : type2Color[type] + '-400'}`,\r\n        `bg-${type2Color[type]}-${ghost ? 200 : 400}`,\r\n        `hover:bg-${type2Color[type]}-${ghost ? 500 : 500}`,\r\n        `border-${type2Color[type]}-${ghost ? 500 : 400}`,\r\n        `hover:border-${type2Color[type]}-500`,\r\n        `py-${sizeMap[size].y}`,\r\n        `px-${sizeMap[size].x}`,\r\n        `text-${sizeMap[size].text}`,\r\n        `${round ? 'rounded-full' : 'rounded-lg'}`,\r\n        'cursor-pointer',\r\n        'transition duration-300 ease-in-out transform hover:scale-105',\r\n        'mx-1',\r\n      ]\"\r\n    >\r\n      <i v-if=\"icon\" :class=\"[`i-ic-baseline-${icon}`, 'p-3']\"></i>\r\n      <slot></slot>\r\n    </button>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport \"uno.css\";\r\nimport { PropType, defineComponent } from \"vue\";\r\nimport { type2Color } from \"../../config/colors\";\r\n\r\nexport type IType = \"primary\" | \"warning\" | \"danger\" | \"success\" | \"default\";\r\nexport type ISize = \"small\" | \"medium\" | \"large\";\r\n\r\nexport const props = {\r\n  type: {\r\n    type: String as PropType<IType>,\r\n    default: \"default\", // 设定默认颜色\r\n  },\r\n  size: {\r\n    type: String as PropType<ISize>,\r\n    default: \"medium\",\r\n  },\r\n  ghost: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n  round: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n  icon: {\r\n    type: String as PropType<string>,\r\n    default: \"\",\r\n  },\r\n};\r\n\r\nexport default defineComponent({\r\n  name: \"MButton\",\r\n  props, // 注册属性\r\n  setup() {\r\n    const sizeMap = {\r\n      small: {\r\n        x: \"2\",\r\n        y: \"1\",\r\n        text: \"sm\",\r\n      },\r\n      medium: {\r\n        x: \"3\",\r\n        y: \"2\",\r\n        text: \"base\",\r\n      },\r\n      large: {\r\n        x: \"5\",\r\n        y: \"3\",\r\n        text: \"lg\",\r\n      },\r\n    };\r\n\r\n    return {\r\n      sizeMap,\r\n      type2Color,\r\n    };\r\n  },\r\n});\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.m-button-wrapper {\r\n  button {\r\n    border-width: 2px;\r\n    border-style: solid;\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <div class=\"m-button-wrapper\">\r\n    <button\r\n      type=\"button\"\r\n      :class=\"[\r\n        `text-${ghost ? type2Color[type] + '-600' : 'white'}`,\r\n        `hover:text-${ghost ? 'white' : type2Color[type] + '-400'}`,\r\n        `bg-${type2Color[type]}-${ghost ? 200 : 400}`,\r\n        `hover:bg-${type2Color[type]}-${ghost ? 500 : 500}`,\r\n        `border-${type2Color[type]}-${ghost ? 500 : 400}`,\r\n        `hover:border-${type2Color[type]}-500`,\r\n        `py-${sizeMap[size].y}`,\r\n        `px-${sizeMap[size].x}`,\r\n        `text-${sizeMap[size].text}`,\r\n        `${round ? 'rounded-full' : 'rounded-lg'}`,\r\n        'cursor-pointer',\r\n        'transition duration-300 ease-in-out transform hover:scale-105',\r\n        'mx-1',\r\n      ]\"\r\n    >\r\n      <i v-if=\"icon\" :class=\"[`i-ic-baseline-${icon}`, 'p-3']\"></i>\r\n      <slot></slot>\r\n    </button>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport \"uno.css\";\r\nimport { PropType, defineComponent } from \"vue\";\r\nimport { type2Color } from \"../../config/colors\";\r\n\r\nexport type IType = \"primary\" | \"warning\" | \"danger\" | \"success\" | \"default\";\r\nexport type ISize = \"small\" | \"medium\" | \"large\";\r\n\r\nexport const props = {\r\n  type: {\r\n    type: String as PropType<IType>,\r\n    default: \"default\", // 设定默认颜色\r\n  },\r\n  size: {\r\n    type: String as PropType<ISize>,\r\n    default: \"medium\",\r\n  },\r\n  ghost: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n  round: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n  icon: {\r\n    type: String as PropType<string>,\r\n    default: \"\",\r\n  },\r\n};\r\n\r\nexport default defineComponent({\r\n  name: \"MButton\",\r\n  props, // 注册属性\r\n  setup() {\r\n    const sizeMap = {\r\n      small: {\r\n        x: \"2\",\r\n        y: \"1\",\r\n        text: \"sm\",\r\n      },\r\n      medium: {\r\n        x: \"3\",\r\n        y: \"2\",\r\n        text: \"base\",\r\n      },\r\n      large: {\r\n        x: \"5\",\r\n        y: \"3\",\r\n        text: \"lg\",\r\n      },\r\n    };\r\n\r\n    return {\r\n      sizeMap,\r\n      type2Color,\r\n    };\r\n  },\r\n});\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.m-button-wrapper {\r\n  button {\r\n    border-width: 2px;\r\n    border-style: solid;\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <div class=\"m-input-wrapper\">\r\n    <div class=\"text-input\">\r\n      <input\r\n        @input=\"onInput\"\r\n        v-model=\"input\"\r\n        :class=\"[\r\n          `py-${sizeMap[size].y}`,\r\n          `px-${sizeMap[size].x}`,\r\n          `text-${sizeMap[size].text}`,\r\n          'rounded-lg',\r\n          `${disabled ? 'border-gray-200' : 'border-blue-200'}`,\r\n          `${disabled ? 'cursor-not-allowed' : 'cursor-pointer'}`,\r\n          `${clearable || icon ? 'p-r-' + sizeMap[size].r : 'p-r-3'}`,\r\n          { 'bg-gray-100': disabled },\r\n        ]\"\r\n        :disabled=\"disabled\"\r\n        :type=\"password ? 'password' : 'text'\"\r\n        :placeholder=\"placeholder\"\r\n      />\r\n      <i\r\n        v-if=\"canClear\"\r\n        :class=\"[\r\n          'icon-in',\r\n          'i-ic-outline-cancel',\r\n          'text-gray-400',\r\n          'hover:bg-gray-500',\r\n          'p-0.5',\r\n          'absolute',\r\n          `text-${sizeMap[size].text}`,\r\n        ]\"\r\n        @click=\"clear\"\r\n      ></i>\r\n      <i\r\n        v-else-if=\"icon\"\r\n        :class=\"[\r\n          'icon-in',\r\n          icon,\r\n          'p-0.5',\r\n          'absolute',\r\n          'text-gray-400',\r\n          `text-${sizeMap[size].text}`,\r\n          'hover:bg-gray-500',\r\n        ]\"\r\n        @click=\"iconClick\"\r\n      ></i>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport \"uno.css\";\r\nimport { defineComponent, computed, ref, PropType } from \"vue\";\r\n\r\nexport type ISize = \"small\" | \"medium\" | \"large\";\r\nexport const props = {\r\n  type: {\r\n    type: String,\r\n    default: \"default\", // 设定默认颜色\r\n  },\r\n  size: {\r\n    type: String as PropType<ISize>,\r\n    default: \"medium\",\r\n  },\r\n  placeholder: {\r\n    type: String,\r\n    default: \"请输入\",\r\n  },\r\n  disabled: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n  clearable: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n  icon: {\r\n    type: String,\r\n    default: \"\",\r\n  },\r\n  password: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n};\r\n\r\nexport default defineComponent({\r\n  name: \"MInput\",\r\n  props, // 注册属性\r\n  emits: [\"update:input\", \"iconClick\"],\r\n  setup(props, { emit }) {\r\n    // const iconDisplay = computed(() => {\r\n    //   return props.clearable\r\n    //     ? \"i-ic-outline-cancel text-gray-400 hover:bg-gray-500\"\r\n    //     : props.icon\r\n    //     ? `i-ic-baseline-${props.icon}`\r\n    //     : \"\";\r\n    // });\r\n\r\n    const sizeMap = {\r\n      small: {\r\n        x: \"2\",\r\n        y: \"1\",\r\n        text: \"sm\",\r\n        r: \"8\",\r\n      },\r\n      medium: {\r\n        x: \"3\",\r\n        y: \"2\",\r\n        text: \"base\",\r\n        r: \"8\",\r\n      },\r\n      large: {\r\n        x: \"5\",\r\n        y: \"3\",\r\n        text: \"lg\",\r\n        r: \"9\",\r\n      },\r\n    };\r\n\r\n    const canClear = computed(\r\n      () => input.value != \"\" && props.icon === \"\" && props.clearable,\r\n    );\r\n    const clear = () => {\r\n      if (props.clearable) {\r\n        // 点击了清除按钮\r\n        input.value = \"\";\r\n      }\r\n    };\r\n    const iconClick = () => {\r\n      emit(\"iconClick\");\r\n    };\r\n\r\n    const input = ref(\"\");\r\n    const onInput = () => {\r\n      emit(\"update:input\", input.value);\r\n    };\r\n\r\n    return {\r\n      canClear,\r\n      clear,\r\n      input,\r\n      iconClick,\r\n      sizeMap,\r\n      onInput,\r\n    };\r\n  },\r\n});\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.m-input-wrapper {\r\n  .text-input {\r\n    display: inline-block;\r\n    position: relative;\r\n    input {\r\n      border-width: 2px;\r\n      border-style: solid;\r\n    }\r\n    .icon-in {\r\n      right: 0.5rem;\r\n      top: 50%;\r\n      transform: translateY(-50%);\r\n    }\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <div class=\"m-input-wrapper\">\r\n    <div class=\"text-input\">\r\n      <input\r\n        @input=\"onInput\"\r\n        v-model=\"input\"\r\n        :class=\"[\r\n          `py-${sizeMap[size].y}`,\r\n          `px-${sizeMap[size].x}`,\r\n          `text-${sizeMap[size].text}`,\r\n          'rounded-lg',\r\n          `${disabled ? 'border-gray-200' : 'border-blue-200'}`,\r\n          `${disabled ? 'cursor-not-allowed' : 'cursor-pointer'}`,\r\n          `${clearable || icon ? 'p-r-' + sizeMap[size].r : 'p-r-3'}`,\r\n          { 'bg-gray-100': disabled },\r\n        ]\"\r\n        :disabled=\"disabled\"\r\n        :type=\"password ? 'password' : 'text'\"\r\n        :placeholder=\"placeholder\"\r\n      />\r\n      <i\r\n        v-if=\"canClear\"\r\n        :class=\"[\r\n          'icon-in',\r\n          'i-ic-outline-cancel',\r\n          'text-gray-400',\r\n          'hover:bg-gray-500',\r\n          'p-0.5',\r\n          'absolute',\r\n          `text-${sizeMap[size].text}`,\r\n        ]\"\r\n        @click=\"clear\"\r\n      ></i>\r\n      <i\r\n        v-else-if=\"icon\"\r\n        :class=\"[\r\n          'icon-in',\r\n          icon,\r\n          'p-0.5',\r\n          'absolute',\r\n          'text-gray-400',\r\n          `text-${sizeMap[size].text}`,\r\n          'hover:bg-gray-500',\r\n        ]\"\r\n        @click=\"iconClick\"\r\n      ></i>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport \"uno.css\";\r\nimport { defineComponent, computed, ref, PropType } from \"vue\";\r\n\r\nexport type ISize = \"small\" | \"medium\" | \"large\";\r\nexport const props = {\r\n  type: {\r\n    type: String,\r\n    default: \"default\", // 设定默认颜色\r\n  },\r\n  size: {\r\n    type: String as PropType<ISize>,\r\n    default: \"medium\",\r\n  },\r\n  placeholder: {\r\n    type: String,\r\n    default: \"请输入\",\r\n  },\r\n  disabled: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n  clearable: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n  icon: {\r\n    type: String,\r\n    default: \"\",\r\n  },\r\n  password: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n};\r\n\r\nexport default defineComponent({\r\n  name: \"MInput\",\r\n  props, // 注册属性\r\n  emits: [\"update:input\", \"iconClick\"],\r\n  setup(props, { emit }) {\r\n    // const iconDisplay = computed(() => {\r\n    //   return props.clearable\r\n    //     ? \"i-ic-outline-cancel text-gray-400 hover:bg-gray-500\"\r\n    //     : props.icon\r\n    //     ? `i-ic-baseline-${props.icon}`\r\n    //     : \"\";\r\n    // });\r\n\r\n    const sizeMap = {\r\n      small: {\r\n        x: \"2\",\r\n        y: \"1\",\r\n        text: \"sm\",\r\n        r: \"8\",\r\n      },\r\n      medium: {\r\n        x: \"3\",\r\n        y: \"2\",\r\n        text: \"base\",\r\n        r: \"8\",\r\n      },\r\n      large: {\r\n        x: \"5\",\r\n        y: \"3\",\r\n        text: \"lg\",\r\n        r: \"9\",\r\n      },\r\n    };\r\n\r\n    const canClear = computed(\r\n      () => input.value != \"\" && props.icon === \"\" && props.clearable,\r\n    );\r\n    const clear = () => {\r\n      if (props.clearable) {\r\n        // 点击了清除按钮\r\n        input.value = \"\";\r\n      }\r\n    };\r\n    const iconClick = () => {\r\n      emit(\"iconClick\");\r\n    };\r\n\r\n    const input = ref(\"\");\r\n    const onInput = () => {\r\n      emit(\"update:input\", input.value);\r\n    };\r\n\r\n    return {\r\n      canClear,\r\n      clear,\r\n      input,\r\n      iconClick,\r\n      sizeMap,\r\n      onInput,\r\n    };\r\n  },\r\n});\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.m-input-wrapper {\r\n  .text-input {\r\n    display: inline-block;\r\n    position: relative;\r\n    input {\r\n      border-width: 2px;\r\n      border-style: solid;\r\n    }\r\n    .icon-in {\r\n      right: 0.5rem;\r\n      top: 50%;\r\n      transform: translateY(-50%);\r\n    }\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <div class=\"m-switch-wrapper\">\r\n    <span v-if=\"inactiveText\" class=\"m-r-1\">{{ inactiveText }}</span>\r\n    <input\r\n      :class=\"['switch-btn']\"\r\n      type=\"checkbox\"\r\n      :disabled=\"disabled\"\r\n      @change=\"changeCheck\"\r\n    />\r\n    <span v-if=\"activeText\" class=\"m-l-1\">{{ activeText }}</span>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport \"uno.css\";\r\nimport { PropType, defineComponent } from \"vue\";\r\n\r\nexport type ISize = \"small\" | \"medium\" | \"large\";\r\n\r\nconst sizeMap = {\r\n  small: {\r\n    x: \"2\",\r\n    y: \"1\",\r\n    text: \"sm\",\r\n    r: \"8\",\r\n  },\r\n  medium: {\r\n    x: \"3\",\r\n    y: \"2\",\r\n    text: \"base\",\r\n    r: \"8\",\r\n  },\r\n  large: {\r\n    x: \"5\",\r\n    y: \"3\",\r\n    text: \"lg\",\r\n    r: \"9\",\r\n  },\r\n};\r\nconst props = {\r\n  activeColor: {\r\n    type: String,\r\n    default: \"blue\",\r\n  },\r\n  inactiveColor: {\r\n    type: String,\r\n    default: \"gray\",\r\n  },\r\n  activeText: {\r\n    type: String,\r\n  },\r\n  inactiveText: {\r\n    type: String,\r\n  },\r\n  disabled: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n  size: {\r\n    type: String as PropType<ISize>,\r\n    default: \"medium\",\r\n  },\r\n  value: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n}; // 注册属性\r\n\r\nexport default defineComponent({\r\n  name: \"MSwitch\",\r\n  props, // 注册属性\r\n  emits: [\"update:input\"],\r\n  setup(props, { emit }) {\r\n    const changeCheck = (e) => {\r\n      emit(\"update:input\", e.checked);\r\n    };\r\n    return {\r\n      sizeMap,\r\n      changeCheck,\r\n    };\r\n  },\r\n});\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.m-switch-wrapper {\r\n  display: flex;\r\n  align-items: center;\r\n  .btn {\r\n    border-radius: 31px;\r\n    background-color: #e9e9eb;\r\n    width: 46px;\r\n    height: 23px;\r\n  }\r\n  .switch-btn {\r\n    position: relative;\r\n    appearance: none;\r\n    cursor: pointer;\r\n    transition: all 100ms;\r\n    .btn;\r\n    &::before {\r\n      position: absolute;\r\n      content: \"\";\r\n      transition: all 300ms cubic-bezier(0.45, 1, 0.4, 1);\r\n      .btn;\r\n    }\r\n    &::after {\r\n      position: absolute;\r\n      left: 2px;\r\n      top: 2px;\r\n      border-radius: 50%;\r\n      width: 20px;\r\n      height: 19px;\r\n      background-color: #fff;\r\n      box-shadow: 1px 1px 5px rgba(#000, 0.3);\r\n      content: \"\";\r\n      transition: all 300ms cubic-bezier(0.4, 0.4, 0.25, 1.35);\r\n    }\r\n    &:checked {\r\n      background-color: #5eb662;\r\n      &::before {\r\n        transform: scale(0);\r\n      }\r\n      &::after {\r\n        transform: translateX(22px);\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <div class=\"m-switch-wrapper\">\r\n    <span v-if=\"inactiveText\" class=\"m-r-1\">{{ inactiveText }}</span>\r\n    <input\r\n      :class=\"['switch-btn']\"\r\n      type=\"checkbox\"\r\n      :disabled=\"disabled\"\r\n      @change=\"changeCheck\"\r\n    />\r\n    <span v-if=\"activeText\" class=\"m-l-1\">{{ activeText }}</span>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport \"uno.css\";\r\nimport { PropType, defineComponent } from \"vue\";\r\n\r\nexport type ISize = \"small\" | \"medium\" | \"large\";\r\n\r\nconst sizeMap = {\r\n  small: {\r\n    x: \"2\",\r\n    y: \"1\",\r\n    text: \"sm\",\r\n    r: \"8\",\r\n  },\r\n  medium: {\r\n    x: \"3\",\r\n    y: \"2\",\r\n    text: \"base\",\r\n    r: \"8\",\r\n  },\r\n  large: {\r\n    x: \"5\",\r\n    y: \"3\",\r\n    text: \"lg\",\r\n    r: \"9\",\r\n  },\r\n};\r\nconst props = {\r\n  activeColor: {\r\n    type: String,\r\n    default: \"blue\",\r\n  },\r\n  inactiveColor: {\r\n    type: String,\r\n    default: \"gray\",\r\n  },\r\n  activeText: {\r\n    type: String,\r\n  },\r\n  inactiveText: {\r\n    type: String,\r\n  },\r\n  disabled: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n  size: {\r\n    type: String as PropType<ISize>,\r\n    default: \"medium\",\r\n  },\r\n  value: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n}; // 注册属性\r\n\r\nexport default defineComponent({\r\n  name: \"MSwitch\",\r\n  props, // 注册属性\r\n  emits: [\"update:input\"],\r\n  setup(props, { emit }) {\r\n    const changeCheck = (e) => {\r\n      emit(\"update:input\", e.checked);\r\n    };\r\n    return {\r\n      sizeMap,\r\n      changeCheck,\r\n    };\r\n  },\r\n});\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.m-switch-wrapper {\r\n  display: flex;\r\n  align-items: center;\r\n  .btn {\r\n    border-radius: 31px;\r\n    background-color: #e9e9eb;\r\n    width: 46px;\r\n    height: 23px;\r\n  }\r\n  .switch-btn {\r\n    position: relative;\r\n    appearance: none;\r\n    cursor: pointer;\r\n    transition: all 100ms;\r\n    .btn;\r\n    &::before {\r\n      position: absolute;\r\n      content: \"\";\r\n      transition: all 300ms cubic-bezier(0.45, 1, 0.4, 1);\r\n      .btn;\r\n    }\r\n    &::after {\r\n      position: absolute;\r\n      left: 2px;\r\n      top: 2px;\r\n      border-radius: 50%;\r\n      width: 20px;\r\n      height: 19px;\r\n      background-color: #fff;\r\n      box-shadow: 1px 1px 5px rgba(#000, 0.3);\r\n      content: \"\";\r\n      transition: all 300ms cubic-bezier(0.4, 0.4, 0.25, 1.35);\r\n    }\r\n    &:checked {\r\n      background-color: #5eb662;\r\n      &::before {\r\n        transform: scale(0);\r\n      }\r\n      &::after {\r\n        transform: translateX(22px);\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <div class=\"m-tree\">\r\n    <div v-for=\"(item, index) in list\" :key=\"index\">\r\n      <div class=\"root\" @click=\"selectedItem(item)\">\r\n        <span\r\n          v-if=\"item.children?.length\"\r\n          class=\"arrow\"\r\n          @click=\"toggleDisplay(item)\"\r\n        >\r\n          <i\r\n            :class=\"[\r\n              'icon',\r\n              item.show ? 'i-ic-arrow-drop-down' : 'i-ic-arrow-drop-up',\r\n            ]\"\r\n          ></i>\r\n        </span>\r\n        {{ item.name }}\r\n      </div>\r\n      <MTree\r\n        v-if=\"item.show\"\r\n        :list=\"item.children\"\r\n        :selectedList=\"selectedList.slice().concat(item.name)\"\r\n      ></MTree>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from \"vue\";\r\n\r\nexport default defineComponent({\r\n  name: \"MTree\",\r\n  components: {},\r\n  props: {\r\n    list: {\r\n      type: Array,\r\n      default: () => [],\r\n    },\r\n    showChildren: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    selectedList: {\r\n      type: Array,\r\n      default: () => [],\r\n    },\r\n  },\r\n  setup(props, { emit }) {\r\n    const toggleDisplay = (item) => {\r\n      item.show = !item.show;\r\n    };\r\n    const selectedItem = (item) => {\r\n      const data = props.selectedList.slice().concat(item.name);\r\n      emit(\"selectedItem\", data);\r\n    };\r\n    return { toggleDisplay, selectedItem };\r\n  },\r\n});\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.m-tree {\r\n  margin-left: 20px;\r\n  .root {\r\n    .arrow {\r\n      position: relative;\r\n      .icon {\r\n        position: absolute;\r\n        left: -16px;\r\n        top: 50%;\r\n        transform: translateY(-50%);\r\n      }\r\n    }\r\n  }\r\n  .leaf {\r\n    margin-left: 20px;\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <div class=\"m-tree\">\r\n    <div v-for=\"(item, index) in list\" :key=\"index\">\r\n      <div class=\"root\" @click=\"selectedItem(item)\">\r\n        <span\r\n          v-if=\"item.children?.length\"\r\n          class=\"arrow\"\r\n          @click=\"toggleDisplay(item)\"\r\n        >\r\n          <i\r\n            :class=\"[\r\n              'icon',\r\n              item.show ? 'i-ic-arrow-drop-down' : 'i-ic-arrow-drop-up',\r\n            ]\"\r\n          ></i>\r\n        </span>\r\n        {{ item.name }}\r\n      </div>\r\n      <MTree\r\n        v-if=\"item.show\"\r\n        :list=\"item.children\"\r\n        :selectedList=\"selectedList.slice().concat(item.name)\"\r\n      ></MTree>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from \"vue\";\r\n\r\nexport default defineComponent({\r\n  name: \"MTree\",\r\n  components: {},\r\n  props: {\r\n    list: {\r\n      type: Array,\r\n      default: () => [],\r\n    },\r\n    showChildren: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    selectedList: {\r\n      type: Array,\r\n      default: () => [],\r\n    },\r\n  },\r\n  setup(props, { emit }) {\r\n    const toggleDisplay = (item) => {\r\n      item.show = !item.show;\r\n    };\r\n    const selectedItem = (item) => {\r\n      const data = props.selectedList.slice().concat(item.name);\r\n      emit(\"selectedItem\", data);\r\n    };\r\n    return { toggleDisplay, selectedItem };\r\n  },\r\n});\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.m-tree {\r\n  margin-left: 20px;\r\n  .root {\r\n    .arrow {\r\n      position: relative;\r\n      .icon {\r\n        position: absolute;\r\n        left: -16px;\r\n        top: 50%;\r\n        transform: translateY(-50%);\r\n      }\r\n    }\r\n  }\r\n  .leaf {\r\n    margin-left: 20px;\r\n  }\r\n}\r\n</style>\r\n","import { App } from \"vue\";\r\nimport MButton from \"./button/index.vue\";\r\nimport MInput from \"./input/index.vue\";\r\nimport MSwitch from \"./switch/index.vue\";\r\nimport MTree from \"./tree/index.vue\";\r\n\r\nexport { MButton, MInput, MSwitch, MTree };\r\n\r\n// 编写一个插件，实现一个install方法\r\nexport default {\r\n  install(app: App): void {\r\n    app.component(MButton.name, MButton);\r\n    app.component(MInput.name, MInput);\r\n    app.component(MSwitch.name, MSwitch);\r\n    app.component(MTree.name, MTree);\r\n  },\r\n};\r\n"],"names":["props","sizeMap","_sfc_render","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_normalizeClass","_createCommentVNode","_hoisted_2","_withDirectives","_hoisted_3","_vModelDynamic","_toDisplayString","_resolveComponent","_Fragment","_renderList","_createTextVNode","_createBlock"],"mappings":"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"}