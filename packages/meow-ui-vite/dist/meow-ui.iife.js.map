{"version":3,"file":"meow-ui.iife.js","sources":["../config/colors.ts","../src/button/index.vue","../src/button/index.vue","../src/input/index.vue","../src/input/index.vue","../src/switch/index.vue","../src/switch/index.vue","../src/tree/index.vue","../src/tree/index.vue","../src/entry.ts"],"sourcesContent":["\r\n\r\nexport const type2Color = {\r\n    primary: 'blue',\r\n    warning: 'yellow',\r\n    danger: 'red',\r\n    success: 'green',\r\n    default: 'gray'\r\n}","<template>\n  <div class=\"m-button-wrapper\">\n    <button\n      type=\"button\"\n      :class=\"[\n        `text-${ghost ? type2Color[type] + '-600' : 'white'}`,\n        `hover:text-${ghost ? 'white' : type2Color[type] + '-400'}`,\n        `bg-${type2Color[type]}-${ghost ? 200 : 400}`,\n        `hover:bg-${type2Color[type]}-${ghost ? 500 : 500}`,\n        `border-${type2Color[type]}-${ghost ? 500 : 400}`,\n        `hover:border-${type2Color[type]}-500`,\n        `py-${sizeMap[size].y}`,\n        `px-${sizeMap[size].x}`,\n        `text-${sizeMap[size].text}`,\n        `${round ? 'rounded-full' : 'rounded-lg'}`,\n        'cursor-pointer',\n        'transition duration-300 ease-in-out transform hover:scale-105',\n        'mx-1',\n      ]\"\n    >\n      <i v-if=\"icon\" :class=\"[`i-ic-baseline-${icon}`, 'p-3']\"></i>\n      <slot></slot>\n    </button>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport \"uno.css\";\nimport { PropType, defineComponent } from \"vue\";\nimport { type2Color } from \"../../config/colors\";\n\nexport type IType = \"primary\" | \"warning\" | \"danger\" | \"success\" | \"default\";\nexport type ISize = \"small\" | \"medium\" | \"large\";\n\nexport const props = {\n  type: {\n    type: String as PropType<IType>,\n    default: \"default\", // 设定默认颜色\n  },\n  size: {\n    type: String as PropType<ISize>,\n    default: \"medium\",\n  },\n  ghost: {\n    type: Boolean,\n    default: false,\n  },\n  round: {\n    type: Boolean,\n    default: false,\n  },\n  icon: {\n    type: String as PropType<string>,\n    default: \"\",\n  },\n};\n\nexport default defineComponent({\n  name: \"MButton\",\n  props, // 注册属性\n  setup() {\n    const sizeMap = {\n      small: {\n        x: \"2\",\n        y: \"1\",\n        text: \"sm\",\n      },\n      medium: {\n        x: \"3\",\n        y: \"2\",\n        text: \"base\",\n      },\n      large: {\n        x: \"5\",\n        y: \"3\",\n        text: \"lg\",\n      },\n    };\n\n    return {\n      sizeMap,\n      type2Color,\n    };\n  },\n});\n</script>\n\n<style lang=\"less\" scoped>\n.m-button-wrapper {\n  button {\n    border-width: 2px;\n    border-style: solid;\n  }\n}\n</style>\n","<template>\n  <div class=\"m-button-wrapper\">\n    <button\n      type=\"button\"\n      :class=\"[\n        `text-${ghost ? type2Color[type] + '-600' : 'white'}`,\n        `hover:text-${ghost ? 'white' : type2Color[type] + '-400'}`,\n        `bg-${type2Color[type]}-${ghost ? 200 : 400}`,\n        `hover:bg-${type2Color[type]}-${ghost ? 500 : 500}`,\n        `border-${type2Color[type]}-${ghost ? 500 : 400}`,\n        `hover:border-${type2Color[type]}-500`,\n        `py-${sizeMap[size].y}`,\n        `px-${sizeMap[size].x}`,\n        `text-${sizeMap[size].text}`,\n        `${round ? 'rounded-full' : 'rounded-lg'}`,\n        'cursor-pointer',\n        'transition duration-300 ease-in-out transform hover:scale-105',\n        'mx-1',\n      ]\"\n    >\n      <i v-if=\"icon\" :class=\"[`i-ic-baseline-${icon}`, 'p-3']\"></i>\n      <slot></slot>\n    </button>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport \"uno.css\";\nimport { PropType, defineComponent } from \"vue\";\nimport { type2Color } from \"../../config/colors\";\n\nexport type IType = \"primary\" | \"warning\" | \"danger\" | \"success\" | \"default\";\nexport type ISize = \"small\" | \"medium\" | \"large\";\n\nexport const props = {\n  type: {\n    type: String as PropType<IType>,\n    default: \"default\", // 设定默认颜色\n  },\n  size: {\n    type: String as PropType<ISize>,\n    default: \"medium\",\n  },\n  ghost: {\n    type: Boolean,\n    default: false,\n  },\n  round: {\n    type: Boolean,\n    default: false,\n  },\n  icon: {\n    type: String as PropType<string>,\n    default: \"\",\n  },\n};\n\nexport default defineComponent({\n  name: \"MButton\",\n  props, // 注册属性\n  setup() {\n    const sizeMap = {\n      small: {\n        x: \"2\",\n        y: \"1\",\n        text: \"sm\",\n      },\n      medium: {\n        x: \"3\",\n        y: \"2\",\n        text: \"base\",\n      },\n      large: {\n        x: \"5\",\n        y: \"3\",\n        text: \"lg\",\n      },\n    };\n\n    return {\n      sizeMap,\n      type2Color,\n    };\n  },\n});\n</script>\n\n<style lang=\"less\" scoped>\n.m-button-wrapper {\n  button {\n    border-width: 2px;\n    border-style: solid;\n  }\n}\n</style>\n","<template>\n  <div class=\"m-input-wrapper\">\n    <div class=\"text-input\">\n      <input\n        @input=\"onInput\"\n        v-model=\"input\"\n        :class=\"[\n          `py-${sizeMap[size].y}`,\n          `px-${sizeMap[size].x}`,\n          `text-${sizeMap[size].text}`,\n          'rounded-lg',\n          `${disabled ? 'border-gray-200' : 'border-blue-200'}`,\n          `${disabled ? 'cursor-not-allowed' : 'cursor-pointer'}`,\n          `${clearable || icon ? 'p-r-' + sizeMap[size].r : 'p-r-3'}`,\n          { 'bg-gray-100': disabled },\n        ]\"\n        :disabled=\"disabled\"\n        :type=\"password ? 'password' : 'text'\"\n        :placeholder=\"placeholder\"\n      />\n      <i\n        v-if=\"canClear\"\n        :class=\"[\n          'icon-in',\n          'i-ic-outline-cancel',\n          'text-gray-400',\n          'hover:bg-gray-500',\n          'p-0.5',\n          'absolute',\n          `text-${sizeMap[size].text}`,\n        ]\"\n        @click=\"clear\"\n      ></i>\n      <i\n        v-else-if=\"icon\"\n        :class=\"[\n          'icon-in',\n          icon,\n          'p-0.5',\n          'absolute',\n          'text-gray-400',\n          `text-${sizeMap[size].text}`,\n          'hover:bg-gray-500',\n        ]\"\n        @click=\"iconClick\"\n      ></i>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport \"uno.css\";\nimport { defineComponent, computed, ref, PropType } from \"vue\";\n\nexport type ISize = \"small\" | \"medium\" | \"large\";\nexport const props = {\n  type: {\n    type: String,\n    default: \"default\", // 设定默认颜色\n  },\n  size: {\n    type: String as PropType<ISize>,\n    default: \"medium\",\n  },\n  placeholder: {\n    type: String,\n    default: \"请输入\",\n  },\n  disabled: {\n    type: Boolean,\n    default: false,\n  },\n  clearable: {\n    type: Boolean,\n    default: false,\n  },\n  icon: {\n    type: String,\n    default: \"\",\n  },\n  password: {\n    type: Boolean,\n    default: false,\n  },\n};\n\nexport default defineComponent({\n  name: \"MInput\",\n  props, // 注册属性\n  emits: [\"update:input\", \"iconClick\"],\n  setup(props, { emit }) {\n    // const iconDisplay = computed(() => {\n    //   return props.clearable\n    //     ? \"i-ic-outline-cancel text-gray-400 hover:bg-gray-500\"\n    //     : props.icon\n    //     ? `i-ic-baseline-${props.icon}`\n    //     : \"\";\n    // });\n\n    const sizeMap = {\n      small: {\n        x: \"2\",\n        y: \"1\",\n        text: \"sm\",\n        r: \"8\",\n      },\n      medium: {\n        x: \"3\",\n        y: \"2\",\n        text: \"base\",\n        r: \"8\",\n      },\n      large: {\n        x: \"5\",\n        y: \"3\",\n        text: \"lg\",\n        r: \"9\",\n      },\n    };\n\n    const canClear = computed(\n      () => input.value != \"\" && props.icon === \"\" && props.clearable,\n    );\n    const clear = () => {\n      if (props.clearable) {\n        // 点击了清除按钮\n        input.value = \"\";\n      }\n    };\n    const iconClick = () => {\n      emit(\"iconClick\");\n    };\n\n    const input = ref(\"\");\n    const onInput = () => {\n      emit(\"update:input\", input.value);\n    };\n\n    return {\n      canClear,\n      clear,\n      input,\n      iconClick,\n      sizeMap,\n      onInput,\n    };\n  },\n});\n</script>\n\n<style lang=\"less\" scoped>\n.m-input-wrapper {\n  .text-input {\n    display: inline-block;\n    position: relative;\n    input {\n      border-width: 2px;\n      border-style: solid;\n    }\n    .icon-in {\n      right: 0.5rem;\n      top: 50%;\n      transform: translateY(-50%);\n    }\n  }\n}\n</style>\n","<template>\n  <div class=\"m-input-wrapper\">\n    <div class=\"text-input\">\n      <input\n        @input=\"onInput\"\n        v-model=\"input\"\n        :class=\"[\n          `py-${sizeMap[size].y}`,\n          `px-${sizeMap[size].x}`,\n          `text-${sizeMap[size].text}`,\n          'rounded-lg',\n          `${disabled ? 'border-gray-200' : 'border-blue-200'}`,\n          `${disabled ? 'cursor-not-allowed' : 'cursor-pointer'}`,\n          `${clearable || icon ? 'p-r-' + sizeMap[size].r : 'p-r-3'}`,\n          { 'bg-gray-100': disabled },\n        ]\"\n        :disabled=\"disabled\"\n        :type=\"password ? 'password' : 'text'\"\n        :placeholder=\"placeholder\"\n      />\n      <i\n        v-if=\"canClear\"\n        :class=\"[\n          'icon-in',\n          'i-ic-outline-cancel',\n          'text-gray-400',\n          'hover:bg-gray-500',\n          'p-0.5',\n          'absolute',\n          `text-${sizeMap[size].text}`,\n        ]\"\n        @click=\"clear\"\n      ></i>\n      <i\n        v-else-if=\"icon\"\n        :class=\"[\n          'icon-in',\n          icon,\n          'p-0.5',\n          'absolute',\n          'text-gray-400',\n          `text-${sizeMap[size].text}`,\n          'hover:bg-gray-500',\n        ]\"\n        @click=\"iconClick\"\n      ></i>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport \"uno.css\";\nimport { defineComponent, computed, ref, PropType } from \"vue\";\n\nexport type ISize = \"small\" | \"medium\" | \"large\";\nexport const props = {\n  type: {\n    type: String,\n    default: \"default\", // 设定默认颜色\n  },\n  size: {\n    type: String as PropType<ISize>,\n    default: \"medium\",\n  },\n  placeholder: {\n    type: String,\n    default: \"请输入\",\n  },\n  disabled: {\n    type: Boolean,\n    default: false,\n  },\n  clearable: {\n    type: Boolean,\n    default: false,\n  },\n  icon: {\n    type: String,\n    default: \"\",\n  },\n  password: {\n    type: Boolean,\n    default: false,\n  },\n};\n\nexport default defineComponent({\n  name: \"MInput\",\n  props, // 注册属性\n  emits: [\"update:input\", \"iconClick\"],\n  setup(props, { emit }) {\n    // const iconDisplay = computed(() => {\n    //   return props.clearable\n    //     ? \"i-ic-outline-cancel text-gray-400 hover:bg-gray-500\"\n    //     : props.icon\n    //     ? `i-ic-baseline-${props.icon}`\n    //     : \"\";\n    // });\n\n    const sizeMap = {\n      small: {\n        x: \"2\",\n        y: \"1\",\n        text: \"sm\",\n        r: \"8\",\n      },\n      medium: {\n        x: \"3\",\n        y: \"2\",\n        text: \"base\",\n        r: \"8\",\n      },\n      large: {\n        x: \"5\",\n        y: \"3\",\n        text: \"lg\",\n        r: \"9\",\n      },\n    };\n\n    const canClear = computed(\n      () => input.value != \"\" && props.icon === \"\" && props.clearable,\n    );\n    const clear = () => {\n      if (props.clearable) {\n        // 点击了清除按钮\n        input.value = \"\";\n      }\n    };\n    const iconClick = () => {\n      emit(\"iconClick\");\n    };\n\n    const input = ref(\"\");\n    const onInput = () => {\n      emit(\"update:input\", input.value);\n    };\n\n    return {\n      canClear,\n      clear,\n      input,\n      iconClick,\n      sizeMap,\n      onInput,\n    };\n  },\n});\n</script>\n\n<style lang=\"less\" scoped>\n.m-input-wrapper {\n  .text-input {\n    display: inline-block;\n    position: relative;\n    input {\n      border-width: 2px;\n      border-style: solid;\n    }\n    .icon-in {\n      right: 0.5rem;\n      top: 50%;\n      transform: translateY(-50%);\n    }\n  }\n}\n</style>\n","<template>\n  <div class=\"m-switch-wrapper\">\n    <span v-if=\"inactiveText\" class=\"m-r-1\">{{ inactiveText }}</span>\n    <input\n      :class=\"['switch-btn']\"\n      type=\"checkbox\"\n      :disabled=\"disabled\"\n      @change=\"changeCheck\"\n    />\n    <span v-if=\"activeText\" class=\"m-l-1\">{{ activeText }}</span>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport \"uno.css\";\nimport { PropType, defineComponent } from \"vue\";\n\nexport type ISize = \"small\" | \"medium\" | \"large\";\n\nconst sizeMap = {\n  small: {\n    x: \"2\",\n    y: \"1\",\n    text: \"sm\",\n    r: \"8\",\n  },\n  medium: {\n    x: \"3\",\n    y: \"2\",\n    text: \"base\",\n    r: \"8\",\n  },\n  large: {\n    x: \"5\",\n    y: \"3\",\n    text: \"lg\",\n    r: \"9\",\n  },\n};\nconst props = {\n  activeColor: {\n    type: String,\n    default: \"blue\",\n  },\n  inactiveColor: {\n    type: String,\n    default: \"gray\",\n  },\n  activeText: {\n    type: String,\n  },\n  inactiveText: {\n    type: String,\n  },\n  disabled: {\n    type: Boolean,\n    default: false,\n  },\n  size: {\n    type: String as PropType<ISize>,\n    default: \"medium\",\n  },\n  value: {\n    type: Boolean,\n    default: false,\n  },\n}; // 注册属性\n\nexport default defineComponent({\n  name: \"MSwitch\",\n  props, // 注册属性\n  emits: [\"update:input\"],\n  setup(props, { emit }) {\n    const changeCheck = (e) => {\n      emit(\"update:input\", e.checked);\n    };\n    return {\n      sizeMap,\n      changeCheck,\n    };\n  },\n});\n</script>\n\n<style lang=\"less\" scoped>\n.m-switch-wrapper {\n  display: flex;\n  align-items: center;\n  .btn {\n    border-radius: 31px;\n    background-color: #e9e9eb;\n    width: 46px;\n    height: 23px;\n  }\n  .switch-btn {\n    position: relative;\n    appearance: none;\n    cursor: pointer;\n    transition: all 100ms;\n    .btn;\n    &::before {\n      position: absolute;\n      content: \"\";\n      transition: all 300ms cubic-bezier(0.45, 1, 0.4, 1);\n      .btn;\n    }\n    &::after {\n      position: absolute;\n      left: 2px;\n      top: 2px;\n      border-radius: 50%;\n      width: 20px;\n      height: 19px;\n      background-color: #fff;\n      box-shadow: 1px 1px 5px rgba(#000, 0.3);\n      content: \"\";\n      transition: all 300ms cubic-bezier(0.4, 0.4, 0.25, 1.35);\n    }\n    &:checked {\n      background-color: #5eb662;\n      &::before {\n        transform: scale(0);\n      }\n      &::after {\n        transform: translateX(22px);\n      }\n    }\n  }\n}\n</style>\n","<template>\n  <div class=\"m-switch-wrapper\">\n    <span v-if=\"inactiveText\" class=\"m-r-1\">{{ inactiveText }}</span>\n    <input\n      :class=\"['switch-btn']\"\n      type=\"checkbox\"\n      :disabled=\"disabled\"\n      @change=\"changeCheck\"\n    />\n    <span v-if=\"activeText\" class=\"m-l-1\">{{ activeText }}</span>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport \"uno.css\";\nimport { PropType, defineComponent } from \"vue\";\n\nexport type ISize = \"small\" | \"medium\" | \"large\";\n\nconst sizeMap = {\n  small: {\n    x: \"2\",\n    y: \"1\",\n    text: \"sm\",\n    r: \"8\",\n  },\n  medium: {\n    x: \"3\",\n    y: \"2\",\n    text: \"base\",\n    r: \"8\",\n  },\n  large: {\n    x: \"5\",\n    y: \"3\",\n    text: \"lg\",\n    r: \"9\",\n  },\n};\nconst props = {\n  activeColor: {\n    type: String,\n    default: \"blue\",\n  },\n  inactiveColor: {\n    type: String,\n    default: \"gray\",\n  },\n  activeText: {\n    type: String,\n  },\n  inactiveText: {\n    type: String,\n  },\n  disabled: {\n    type: Boolean,\n    default: false,\n  },\n  size: {\n    type: String as PropType<ISize>,\n    default: \"medium\",\n  },\n  value: {\n    type: Boolean,\n    default: false,\n  },\n}; // 注册属性\n\nexport default defineComponent({\n  name: \"MSwitch\",\n  props, // 注册属性\n  emits: [\"update:input\"],\n  setup(props, { emit }) {\n    const changeCheck = (e) => {\n      emit(\"update:input\", e.checked);\n    };\n    return {\n      sizeMap,\n      changeCheck,\n    };\n  },\n});\n</script>\n\n<style lang=\"less\" scoped>\n.m-switch-wrapper {\n  display: flex;\n  align-items: center;\n  .btn {\n    border-radius: 31px;\n    background-color: #e9e9eb;\n    width: 46px;\n    height: 23px;\n  }\n  .switch-btn {\n    position: relative;\n    appearance: none;\n    cursor: pointer;\n    transition: all 100ms;\n    .btn;\n    &::before {\n      position: absolute;\n      content: \"\";\n      transition: all 300ms cubic-bezier(0.45, 1, 0.4, 1);\n      .btn;\n    }\n    &::after {\n      position: absolute;\n      left: 2px;\n      top: 2px;\n      border-radius: 50%;\n      width: 20px;\n      height: 19px;\n      background-color: #fff;\n      box-shadow: 1px 1px 5px rgba(#000, 0.3);\n      content: \"\";\n      transition: all 300ms cubic-bezier(0.4, 0.4, 0.25, 1.35);\n    }\n    &:checked {\n      background-color: #5eb662;\n      &::before {\n        transform: scale(0);\n      }\n      &::after {\n        transform: translateX(22px);\n      }\n    }\n  }\n}\n</style>\n","<template>\r\n  <div class=\"m-tree\">\r\n    <div v-for=\"(item, index) in list\" :key=\"index\">\r\n      <div class=\"root\" @click=\"selectedItem(item)\">\r\n        <span\r\n          v-if=\"item.children?.length\"\r\n          class=\"arrow\"\r\n          @click=\"toggleDisplay(item)\"\r\n        >\r\n          <i\r\n            :class=\"[\r\n              'icon',\r\n              item.show ? 'i-ic-arrow-drop-down' : 'i-ic-arrow-drop-up',\r\n            ]\"\r\n          ></i>\r\n        </span>\r\n        {{ item.name }}\r\n      </div>\r\n      <MTree\r\n        v-if=\"item.show\"\r\n        :list=\"item.children\"\r\n        :selectedList=\"selectedList.slice().concat(item.name)\"\r\n      ></MTree>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from \"vue\";\r\n\r\nexport default defineComponent({\r\n  name: \"MTree\",\r\n  components: {},\r\n  props: {\r\n    list: {\r\n      type: Array,\r\n      default: () => [],\r\n    },\r\n    showChildren: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    selectedList: {\r\n      type: Array,\r\n      default: () => [],\r\n    },\r\n  },\r\n  setup(props, { emit }) {\r\n    const toggleDisplay = (item) => {\r\n      item.show = !item.show;\r\n    };\r\n    const selectedItem = (item) => {\r\n      const data = props.selectedList.slice().concat(item.name);\r\n      emit(\"selectedItem\", data);\r\n    };\r\n    return { toggleDisplay, selectedItem };\r\n  },\r\n});\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.m-tree {\r\n  margin-left: 20px;\r\n  .root {\r\n    .arrow {\r\n      position: relative;\r\n      .icon {\r\n        position: absolute;\r\n        left: -16px;\r\n        top: 50%;\r\n        transform: translateY(-50%);\r\n      }\r\n    }\r\n  }\r\n  .leaf {\r\n    margin-left: 20px;\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <div class=\"m-tree\">\r\n    <div v-for=\"(item, index) in list\" :key=\"index\">\r\n      <div class=\"root\" @click=\"selectedItem(item)\">\r\n        <span\r\n          v-if=\"item.children?.length\"\r\n          class=\"arrow\"\r\n          @click=\"toggleDisplay(item)\"\r\n        >\r\n          <i\r\n            :class=\"[\r\n              'icon',\r\n              item.show ? 'i-ic-arrow-drop-down' : 'i-ic-arrow-drop-up',\r\n            ]\"\r\n          ></i>\r\n        </span>\r\n        {{ item.name }}\r\n      </div>\r\n      <MTree\r\n        v-if=\"item.show\"\r\n        :list=\"item.children\"\r\n        :selectedList=\"selectedList.slice().concat(item.name)\"\r\n      ></MTree>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from \"vue\";\r\n\r\nexport default defineComponent({\r\n  name: \"MTree\",\r\n  components: {},\r\n  props: {\r\n    list: {\r\n      type: Array,\r\n      default: () => [],\r\n    },\r\n    showChildren: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    selectedList: {\r\n      type: Array,\r\n      default: () => [],\r\n    },\r\n  },\r\n  setup(props, { emit }) {\r\n    const toggleDisplay = (item) => {\r\n      item.show = !item.show;\r\n    };\r\n    const selectedItem = (item) => {\r\n      const data = props.selectedList.slice().concat(item.name);\r\n      emit(\"selectedItem\", data);\r\n    };\r\n    return { toggleDisplay, selectedItem };\r\n  },\r\n});\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.m-tree {\r\n  margin-left: 20px;\r\n  .root {\r\n    .arrow {\r\n      position: relative;\r\n      .icon {\r\n        position: absolute;\r\n        left: -16px;\r\n        top: 50%;\r\n        transform: translateY(-50%);\r\n      }\r\n    }\r\n  }\r\n  .leaf {\r\n    margin-left: 20px;\r\n  }\r\n}\r\n</style>\r\n","import { App } from \"vue\";\nimport MButton from \"./button/index.vue\";\nimport MInput from \"./input/index.vue\";\nimport MSwitch from \"./switch/index.vue\";\nimport MTree from \"./tree/index.vue\";\n\nexport { MButton, MInput, MSwitch, MTree };\n\n// 编写一个插件，实现一个install方法\nexport default {\n  install(app: App): void {\n    app.component(MButton.name, MButton);\n    app.component(MInput.name, MInput);\n    app.component(MSwitch.name, MSwitch);\n    app.component(MTree.name, MTree);\n  },\n};\n"],"names":["type2Color","primary","warning","danger","success","default","props","type","String","size","ghost","Boolean","round","icon","_sfc_main$3","defineComponent","name","setup","sizeMap","small","x","y","text","medium","large","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","class","_normalizeClass","key","_createCommentVNode","placeholder","disabled","clearable","password","_sfc_main$2","emits","emit","canClear","computed","input","value","ref","clear","iconClick","r","onInput","createElementVNode","_hoisted_2","_withDirectives","withDirectives","args","$event","_hoisted_3","_vModelDynamic","vModelDynamic","onClick","createElementBlock","activeColor","inactiveColor","activeText","inactiveText","_sfc_main$1","changeCheck","e","checked","_hoisted_4","openBlock","_toDisplayString","onChange","_sfc_main","components","list","Array","showChildren","selectedList","toggleDisplay","item","show","selectedItem","data","slice","concat","_component_MTree","_resolveComponent","_Fragment","_renderList","renderList","index","_createTextVNode","createTextVNode","toDisplayString","_createBlock","children","entry","install","app","component","MButton","MInput","MSwitch","MTree"],"mappings":"mhhBAEaA,EAAa,CACtBC,QAAS,OACTC,QAAS,SACTC,OAAQ,MACRC,QAAS,QACTC,QAAS,QC2BAC,EAAQ,CACnBC,KAAM,CACJA,KAAMC,OACNH,QAAS,WAEXI,KAAM,CACJF,KAAMC,OACNH,QAAS,UAEXK,MAAO,CACLH,KAAMI,QACNN,SAAS,GAEXO,MAAO,CACLL,KAAMI,QACNN,SAAS,GAEXQ,KAAM,CACJN,KAAMC,OACNH,QAAS,KAIbS,EAAeC,kBAAgB,CAC7BC,KAAM,UAAAV,MACNA,EACAW,MAAQ,KAmBC,CACLC,QAnBc,CACdC,MAAO,CACLC,EAAG,IACHC,EAAG,IACHC,KAAM,MAERC,OAAQ,CACNH,EAAG,IACHC,EAAG,IACHC,KAAM,QAERE,MAAO,CACLJ,EAAG,IACHC,EAAG,IACHC,KAAM,OAMRtB,mJC3DOyB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,UAnBHC,cAASC,qBAAA,MAAAC,EAAA,CACPC,EAAAA,mBAAA,SAAA,CAAA3B,KAAA,SAAyF4B,MAAAC,EAAAA,eAAA,CAA6D,SAAAX,EAAAf,MAAUe,EAACzB,WAASyB,EAAKlB,MAAA,OAAA,SAAoC,eAAAkB,EAAAf,MAAU,QAAKe,EAAKzB,WAAKyB,EAAAlB,MAAA,QAAkC,MAAAkB,EAAAzB,WAAAyB,EAAWlB,SAAIkB,EAAKf,MAAK,IAAA,MAAA,YAAAe,EAAwCzB,aAAWO,SAAIkB,EAAAf,MAAA,MAAA,UAAuBe,aAAQA,EAAOlB,SAAAkB,EAAAf,MAAA,IAAA,MAAA,gBAAkBe,EAAQzB,WAAOyB,EAAAlB,YAAA,MAAAkB,EAAoBP,UAAQT,MAAIY,IAAA,MAAqBI,EAAKP,QAAAO,EAAAhB,MAAAW,IAAA,QAAAK,EAAAP,QAAAO,EAAAhB,MAAAa,2IAgB5d,CAAYG,EAAAZ,MAAAkB,EAAAA,YAAAC,EAAAA,mBAAA,IAAA,CAAAK,IAAA,6DACR,KAAA,IAAAC,EAAAA,mBAAA,IAAA,2FCkCNhC,EAAQ,CACnBC,KAAM,CACJA,KAAMC,OACNH,QAAS,WAEXI,KAAM,CACJF,KAAMC,OACNH,QAAS,UAEXkC,YAAa,CACXhC,KAAMC,OACNH,QAAS,OAEXmC,SAAU,CACRjC,KAAMI,QACNN,SAAS,GAEXoC,UAAW,CACTlC,KAAMI,QACNN,SAAS,GAEXQ,KAAM,CACJN,KAAMC,OACNH,QAAS,IAEXqC,SAAU,CACRnC,KAAMI,QACNN,SAAS,IAIbsC,EAAe5B,kBAAgB,CAC7BC,KAAM,SAAAV,MACNA,EACAsC,MAAO,CAAC,eAAgB,aACxB,KAAA3B,CAAMX,GAAOuC,KAAEA,IASb,MAqBMC,EAAWC,EAAAA,UACf,IAAqB,IAAfC,EAAMC,OAA8B,KAAf3C,EAAMO,MAAeP,EAAMmC,YAYlDO,EAAQE,MAAI,IAKX,MAAA,CACLJ,WACAK,MAjBY,KACR7C,EAAMmC,YAERO,EAAMC,MAAQ,GAChB,EAcAD,QACAI,UAbgB,KAChBP,EAAK,YAAW,EAahB3B,QA5Cc,CACdC,MAAO,CACLC,EAAG,IACHC,EAAG,IACHC,KAAM,KACN+B,EAAG,KAEL9B,OAAQ,CACNH,EAAG,IACHC,EAAG,IACHC,KAAM,OACN+B,EAAG,KAEL7B,MAAO,CACLJ,EAAG,IACHC,EAAG,IACHC,KAAM,KACN+B,EAAG,MA4BLC,QAVc,KACTT,EAAA,eAAgBG,EAAMC,MAAK,EAWpC,kHChJE,SAAAxB,EA4CMC,EA5CNC,EA4CMC,EAAAC,EAAAC,wBA3CJE,qBAgBE,MAAAC,EAAA,CAfMC,EAAAqB,mBAAA,MAAAC,EAAA,CAAAC,EAAAC,eAAAxB,EAAAqB,mBAAA,QAAA,CAELD,QAAK5B,EAAA,KAAAA,EAAA,GAAA,IAAAiC,IAAAlC,EAAA6B,SAAA7B,EAAA6B,WAAAK,IAAA,sBAA4BjC,EAAI,KAAGA,EAAA,GAAAkC,GAAAnC,EAAAuB,MAAAY,GAA4BzB,MAAAC,EAAAA,eAAA,CAAA,MAAAX,EAA6BP,UAAQT,MAAIY,IAAA,MAAAI,EAAAP,QAAAO,EAAAhB,MAAAW,YAA+CK,EAAQP,QAAAO,EAAAhB,MAAAa,OAAA,aAA4H,IAAAG,EAAAe,SAAS,kBAAQ,mBAAA,IAAAf,EAAAe,SAAoE,qBAAQ,kBAAA,IAAAf,EAAAgB,WAAAhB,EAAAZ,KAAA,OAAAY,EAAAP,QAAAO,EAAAhB,MAAA4C,EAAA,SAU7X,CAAA,cAAU5B,EAAQe,YAElBA,SAAaf,EAAAe,SAAAjC,KAAAkB,EAAAiB,SAAA,WAAA,OAbLH,YAAAd,EAAAc,aAAA,KAAA,GAAAsB,GAAA,CAgBH,CAAQC,EAAAC,cAAAtC,EAAAuB,SACRvB,EAAAqB,UAAAf,EAAAA,YAAAC,EAAAA,mBAAA,IAAA,CAAAK,IAAA,yHASLZ,EAAKP,QAAAO,EAAAhB,MAAAa,SAGK0C,QAAItC,EAAA,KAAAA,EAAA,GAAA,IAAAiC,IAAAlC,EAAA0B,OAAA1B,EAAA0B,SAAAQ,KACT,KAAA,IAAAlC,EAAAZ,MAAAkB,cAAAC,EAAAiC,mBAAA,IAAA,CAAA5B,IAAA,EAAmCF,MAAIC,EAAAA,eAAA,CAAA,qPChB/ClB,EAAU,CACdC,MAAO,CACLC,EAAG,IACHC,EAAG,IACHC,KAAM,KACN+B,EAAG,KAEL9B,OAAQ,CACNH,EAAG,IACHC,EAAG,IACHC,KAAM,OACN+B,EAAG,KAEL7B,MAAO,CACLJ,EAAG,IACHC,EAAG,IACHC,KAAM,KACN+B,EAAG,MAGD/C,EAAQ,CACZ4D,YAAa,CACX3D,KAAMC,OACNH,QAAS,QAEX8D,cAAe,CACb5D,KAAMC,OACNH,QAAS,QAEX+D,WAAY,CACV7D,KAAMC,QAER6D,aAAc,CACZ9D,KAAMC,QAERgC,SAAU,CACRjC,KAAMI,QACNN,SAAS,GAEXI,KAAM,CACJF,KAAMC,OACNH,QAAS,UAEX4C,MAAO,CACL1C,KAAMI,QACNN,SAAS,IAIbiE,EAAevD,kBAAgB,CAC7BC,KAAM,UACNV,QACAsC,MAAO,CAAC,gBACR3B,MAAMX,CAAAA,GAAOuC,KAAEA,MAIN,CACL3B,UACAqD,YALmBC,IACd3B,EAAA,eAAgB2B,EAAEC,QAAO,mCCxENjB,EAAa,CAAAnB,IAAA,gCAOfqC,EAAa,CAAArC,IAAA,iDAPbZ,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAxB,OAAAC,cAAAC,qBAAiE,MAAjEC,EAAiE,CACjER,EAAA4C,cAAAtC,EAAA4C,YAAA3C,EAAAA,mBAKE,OAJCwB,EAAAoB,EAAAA,gBAAAnD,EAAA4C,cAAA,IAAA/B,EAAAA,mBAAK,IAAE,GACOJ,EAAAA,mBAAA,QAAA,CACdC,MAAkBC,EAAAA,eAAA,CAAA,eAClB7B,KAAA,WAAAiC,SAAAf,EAAAe,SAESqC,SAAUnD,EAAA,KAAAA,EAAA,GAAA,IAAAiC,IAAAlC,EAAA8C,aAAA9C,EAAA8C,eAAAZ,KAAtB,KAAA,GAAAE,GAAApC,EAAA2C,YAAArC,EAAA4C,YAAA3C,EAAAA,mBAAA,OAAA0C,EAAAE,EAAAA,gBAAAnD,EAAA2C,YAAA,IAAA9B,EAAAA,mBAAA,IAAA,yCCqBJwC,EAAe/D,kBAAgB,CAC7BC,KAAM,QACN+D,WAAY,CAAC,EACbzE,MAAO,CACL0E,KAAM,CACJzE,KAAM0E,MACN5E,QAAS,IAAM,IAEjB6E,aAAc,CACZ3E,KAAMI,QACNN,SAAS,GAEX8E,aAAc,CACZ5E,KAAM0E,MACN5E,QAAS,IAAM,KAGnBY,MAAMX,CAAAA,GAAOuC,KAAEA,MAQN,CAAEuC,cAPcC,IAChBA,EAAAC,MAAQD,EAAKC,IAAA,EAMIC,aAJFF,IACpB,MAAMG,EAAOlF,EAAM6E,aAAaM,QAAQC,OAAOL,EAAKrE,MACpD6B,EAAK,eAAgB2C,EAAI,kGCpD7B,MAAAG,EAAAC,mBAuBM,SAtBJ,OAAA7D,cAAAC,qBAAA,MAqBMC,EArBmC,EAAAF,EAAAA,WACvC,GAcMC,EAAAiC,mBAAA4B,WAAA,KAAAC,EAAAC,WAAAtE,EAAAuD,MAAA,CAAAK,EAAAW,WAdDjE,OAAAA,EAAAA,YAAYC,EAAAiC,mBAAA,MAAA,CAAA5B,IAAA2D,GAAA,CAAA9D,EAAAA,mBAAO,MAAE,CAAAC,MAAA,OAEX6B,QAAAJ,GAAUnC,EAAM8D,aAAAF,IAAA,uDACdrD,EAAAA,mBAAA,OAAA,CACZK,IAAA,EAAAF,MAAA,QAED6B,QAKKJ,GAAAnC,EAAA2D,cAAAC,IAAA,2BAJiDlD,MAAKC,EAAAA,eAAA,CAAA,sEAM7D,EAAAyB,IAAAvB,EAAAA,mBAAA,IAAA,GAGM2D,EAASC,gBAAA,IAAAtB,EAAAuB,gBAAAd,EAAArE,MAAA,IAAA,EAAAwC,GACJ6B,EAAAC,MAAAvD,EAAAA,YAACqE,EAAAA,YAAQT,EAAA,CACnBtD,IAAA,EAAA2C,KAAAK,EAAAgB,2KCZMC,EAAA,CACb,OAAAC,CAAQC,GACFA,EAAAC,UAAUC,EAAQ1F,KAAM0F,GACxBF,EAAAC,UAAUE,EAAO3F,KAAM2F,GACvBH,EAAAC,UAAUG,EAAQ5F,KAAM4F,GACxBJ,EAAAC,UAAUI,EAAM7F,KAAM6F,EAC5B"}